
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.sql.Blob;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import static javax.swing.JFileChooser.DIRECTORIES_ONLY;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Sai Shriram
 */
public class List_Of_Files extends javax.swing.JFrame {

    /**
     * Creates new form List_OF_Files
     */
    public List_Of_Files() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Upload_Label = new javax.swing.JLabel();
        Path_Label = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList();
        jButton1 = new javax.swing.JButton();

        setTitle("SELECT THE FILE TO DOWNLOAD");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Upload_Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Upload_Label.setText("Uploader");
        getContentPane().add(Upload_Label, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 170, -1));

        Path_Label.setText("File Name");
        getContentPane().add(Path_Label, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 0, -1, -1));

        jList1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jList1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-2, 20, 160, 520));

        jList2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jList2.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(jList2);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 20, 690, 520));

        jButton1.setText("DOWNLOAD");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 550, 680, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        jList2.requestFocus();        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowActivated

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String path, final_path = null;
        //File Selected_File = null;
        String selected_Name = (String) jList2.getSelectedValue();
        int file_size = 4096;
        File Selected_File;

        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(DIRECTORIES_ONLY);
        int open = chooser.showOpenDialog(this);
        if (open == JFileChooser.APPROVE_OPTION) {
            Selected_File=chooser.getSelectedFile();
            path = Selected_File.getAbsolutePath();
            System.out.println(path);
            final_path = path + "\\" + selected_Name;
            System.out.println(final_path);
            
            
        }

        try {
            String url = "jdbc:mysql://localhost:3306/connect";
            Connection conn;
            Statement stmt;
            ResultSet rs;
            Class.forName("com.mysql.jdbc.Driver");
            if (!selected_Name.equals("")) {
                conn = DriverManager.getConnection(url, "root", "sairam");
                /*PreparedStatement pre = conn.prepareStatement("Select File from Files where path like '%(?)';");
                pre.setString(1,selected_Name);*/
                 
                stmt=conn.createStatement();
                String sql="Select File from Files where path like '%"+selected_Name+"';";
                
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                   Blob blob = rs.getBlob("File");
                    InputStream input = blob.getBinaryStream();
                    
                    /*File file=new File("C:\\Downloaded From Chat");
                    if(!file.exists()){
                        file.mkdir();
                    }*/
                    OutputStream output = new FileOutputStream(new File(final_path));

                    int bytes_read;
                    byte[] buffer = new byte[file_size];
                    while ((bytes_read = input.read(buffer)) != -1) {
                        output.write(buffer, 0, bytes_read);
                    }
                      
                    input.close();
                    output.close();
                    JOptionPane.showMessageDialog(this,"File Downloaded to"+ final_path);
                }
            }else{
                JOptionPane.showMessageDialog(this,"SELECT A FILE TO DOWNLOAD!");
            }
        } catch (ClassNotFoundException | SQLException | FileNotFoundException ex) {
            Logger.getLogger(List_Of_Files.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(List_Of_Files.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        setVisible(false);
    }//GEN-LAST:event_formWindowClosed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(List_Of_Files.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(List_Of_Files.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(List_Of_Files.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(List_Of_Files.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new List_Of_Files().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Path_Label;
    private javax.swing.JLabel Upload_Label;
    private javax.swing.JButton jButton1;
    public static javax.swing.JList jList1;
    public static javax.swing.JList jList2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
